"""Sanity Check: Files Generated by make_dataset() module"""

import pandas as pd
import pytest

# Raw Data.
def test_raw_data():
    """raw data test"""
    raw = pd.read_csv("datasets/raw.csv")
    assert raw.shape == (1573, 43), "Raw data failed"

def test_selected_data():
    """filtered data test"""
    selected_data = pd.read_csv("datasets/selected_data.csv")
    assert selected_data.shape == (1573, 11), "Filtered data failed"

def test_dropped_data():
    """dropped data test"""
    dropped_data = pd.read_csv("datasets/dropped_data.csv")
    assert dropped_data.shape == (1573, 34), "Filtered data failed"


@pytest.fixture
def train():
    train_set = pd.read_csv("datasets/train_clean.csv")
    train_clean = pd.read_csv("datasets/train_clean.csv")
    return train_set, train_clean

def test_train_set(train):
    """test set shape"""
    assert train[0].shape == (1179, 11), "Train set Failed"

def test_train_clean(train):
    """test clean shape"""
    assert train[1].shape == (1179, 11), "Train Clean Failed"


@pytest.fixture
def test():
    test_set = pd.read_csv("datasets/test_set.csv")
    test_clean = pd.read_csv("datasets/test_clean.csv")
    return test_set, test_clean


def test_test_set(test):
    """test set shape"""
    assert test[0].shape == (394, 11), "Test set Failed"


def test_test_clean(test):
    """test clean shape"""
    assert test[0].shape == (394, 11), "Test Clean Failed"

